{"version":3,"sources":["mymce.babeled.min.js","mymce.babeled.js"],"names":["myUpload","uploadRD","darray","$","modal","loader","find","updatep","n","text","length","_","forEach","val","index","data","date","GetCurrentDate","type","title","name","source","path","console","log","post","res","loadContent","getQuoteText","htmlStr","p","each","this","Att","_this","progress","updateProgress","oEvent","computProgress","fileUploadReq","XMLHttpRequest","withCredentials","open","onload","json","JSON","parse","responseText","location","upload","addEventListener","uploadFile","ele","files","form","parent","formData","FormData","send","abort","initManeger","e","atts","attCount","states","addAtt","push","attname","newAtt","newForm","attr","class","enctype","method","hidden","fileInput","id","change","append","click","wrapUp","html","vue","att","mce","init","hide","show","Vue","el","refes","methods","remove","refe","$remove","refeManager","off","datas","dataManager","attManager","tinymce","EditorManager","selector","plugins","toolbar","image_caption","paste_data_images","fontsize_formats","menubar","images_upload_url","content_css","min_width","max_height","reader","FileReader","activeEditor","execCommand","target","result","uploadImages","readAsDataURL","success","save","attHtml","owner","Cookies","get","cover","quote","body","url"],"mappings":"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","file":"mymce.babeled.min.js","sourcesContent":["'use strict';\n\nvar myUpload = function () {\n\n    var mce = {};\n    var vue;\n\n    function uploadRD(darray) {\n        $('#loader').modal('show');\n        var loader = $('#loader').find('.loader');\n        var updatep = function updatep(n) {\n            loader.text('uploading ' + n + 'of ' + darray.length);\n        };\n        _.forEach(darray, function (val, index) {\n            index++;\n            updatep(index);\n            data = {\n                date: GetCurrentDate(),\n                type: $('#upload-type').val(),\n                title: val.title,\n                name: val.name,\n                source: val.source,\n                path: val.path\n            };\n            console.log(data);\n\n            $.post('/add_new_post', data, function (res) {\n                $('#loader').modal('hide');\n                console.log(res);\n                //loadContent(res.url);\n            });\n        });\n        loadContent('/home');\n    }\n\n    function getQuoteText(htmlStr) {\n        var p;\n        $(htmlStr).find('*').each(function () {\n            if ($(this).text().length > 32) {\n                p = $(this).text();\n                return false;\n            }\n        });\n        return p;\n    }\n\n    function Att() {\n        var _this = this;\n\n        this.title = '';\n        this.name = '';\n        this.source = '';\n        this.path = '';\n        this.progress = '0%';\n        this.updateProgress = function (oEvent) {\n            _this.progress = computProgress(oEvent);\n        };\n        var fileUploadReq = new XMLHttpRequest();\n        fileUploadReq.withCredentials = false;\n        fileUploadReq.open('POST', '/files');\n\n        fileUploadReq.onload = function () {\n            var json = JSON.parse(fileUploadReq.responseText);\n            _this.path = json.location;\n        };\n        fileUploadReq.upload.addEventListener(\"progress\", this.updateProgress, false);\n        this.uploadFile = function (ele) {\n            _this.name = ele.files[0].name;\n            var form = $(ele).parent('.frmfile')[0];\n            var formData = new FormData(form);\n            fileUploadReq.send(formData);\n        };\n        this.abort = function () {\n            fileUploadReq.abort();\n        };\n    }\n\n    function initManeger() {\n        var e = {\n            atts: {}\n        };\n        var attCount = 0;\n        e.states = []; //Array of upload process states, '1' means complete\n        e.addAtt = function () {\n            e.states.push(0);\n            attCount++;\n            var attname = 'att' + attCount;\n            var newAtt = new Att();\n            e.atts[attname] = newAtt;\n            var newForm = $('<form>').attr({\n                'class': 'frmfile',\n                'enctype': 'multipart/form-data',\n                'method': 'post',\n                'hidden': 1\n            });\n            var fileInput = $('<input>').attr({\n                'id': 'iptfile' + attCount,\n                'type': 'file',\n                'name': 'file' + attCount,\n                'hidden': 1\n            }).change(function () {\n                newAtt.uploadFile(this);\n            });\n            $('body').append(newForm.append(fileInput));\n            fileInput.click();\n            return newAtt;\n        };\n        e.wrapUp = function () {\n            var html = '';\n            _.forEach(vue.atts, function (att, index) {\n                index++;\n                html += '<p>附件.' + index + '： <a href=\"' + att.path + '\" download=\"' + att.name + '\">' + att.name + '</a>' + '</p>';\n            });\n            return html;\n        };\n        return e;\n    };\n\n    mce.init = function (type) {\n        console.log(type);\n        if (type == 'refe') {\n            $('.news-only').hide();\n            $('.data-only').hide();\n            $('.refe-only').show();\n            $('#btn-add').show();\n            vue = new Vue({\n                el: '#app-r',\n                data: {\n                    refes: []\n                },\n                methods: {\n                    remove: function remove(refe) {\n                        refe.abort();\n                        this.refes.$remove(refe);\n                    }\n                }\n            });\n            var refeManager = initManeger();\n            $('#btn-add').off('click');\n            $('#btn-add').click(function () {\n                vue.refes.push(refeManager.addAtt());\n            });\n            $('#btn-upload').off('click');\n            $('#btn-upload').click(function () {\n                uploadRD(vue.refes);\n            });\n        } else if (type == 'data') {\n            $('.news-only').hide();\n            $('.refe-only').hide();\n            $('.data-only').show();\n            $('#btn-add').show();\n            vue = new Vue({\n                el: '#app-d',\n                data: {\n                    datas: []\n                },\n                methods: {\n                    remove: function remove(data) {\n                        data.abort();\n                        this.datas.$remove(data);\n                    }\n                }\n            });\n            var dataManager = initManeger();\n            $('#btn-add').off('click');\n            $('#btn-add').click(function () {\n                vue.datas.push(dataManager.addAtt());\n            });\n            $('#btn-upload').off('click');\n            $('#btn-upload').click(function () {\n                uploadRD(vue.datas);\n            });\n        } else {\n            $('.news-only').show();\n            $('.refe-only').show();\n            $('.data-only').hide();\n            $('.refe-only').hide();\n            $('#btn-add').hide();\n            $('#upload-type').change(function () {\n                mce.init($(this).val());\n            });\n            var attManager = initManeger();\n            tinymce.EditorManager.remove('#input-body');\n            $('#btn-add').hide();\n            tinymce.init({\n                selector: '#input-body', // change this value according to your HTML\n                //inline:true,\n                plugins: \"advlist link anchor paste image autoresize preview imagetools\",\n                toolbar: 'undo redo formatselect advlist fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright link image preview',\n                image_caption: true,\n                paste_data_images: true,\n                fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt 36pt',\n                menubar: false,\n                images_upload_url: '/images',\n                content_css: 'stylesheets/style.min.css',\n                min_width: 420,\n                max_height: 960\n            });\n            vue = new Vue({\n                el: '#app',\n                data: {\n                    atts: []\n                },\n                methods: {\n                    remove: function remove(att) {\n                        att.abort();\n                        this.atts.$remove(att);\n                    }\n                }\n            });\n            $('#input-img').off('change');\n            $('#input-img').change(function () {\n                if (this.files && this.files[0]) {\n                    var reader = new FileReader();\n                    reader.onload = function (e) {\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img src=\"' + e.target.result + '\" width=\"80%\" >');\n\n                        tinymce.activeEditor.uploadImages();\n                    };\n                    reader.readAsDataURL(this.files[0]);\n                }\n            });\n            $('#input-date').val(GetCurrentDate());\n            $('#btn-att').off('click');\n            $('#btn-att').click(function () {\n                vue.atts.push(attManager.addAtt());\n            });\n\n            $('#btn-upload').off('click');\n            $('#btn-img').click(function () {\n                $('#input-img').click();\n            });\n            $('#btn-upload').off('click');\n            $('#btn-upload').click(function () {\n                $('#loader').modal('show');\n                var loader = $('#loader').find('.loader');\n                loader.text('uploading Images');\n                tinymce.activeEditor.uploadImages(function (success) {\n                    loader.text('wrapping together');\n                    tinymce.activeEditor.save();\n                    var attHtml = attManager.wrapUp(vue.atts);\n                    var data = {\n                        type: $('#upload-type').val(),\n                        title: $('#input-title').val(),\n                        date: $('#input-date').val(),\n                        owner: Cookies.get('username'),\n                        source: $('#input-source').val(),\n                        cover: $($('#input-body').val()).find('img').attr('src'),\n                        quote: getQuoteText($('#input-body').val()),\n                        body: $('#input-body').val() + attHtml,\n                        att: attHtml\n                    };\n                    loader.text('pendding');\n                    $.post('/add_new_post', data, function (res) {\n                        $('#loader').modal('hide');\n                        loadContent(res.url);\n                    });\n                });\n            });\n        }\n    };\n    return mce;\n}();","var myUpload = function() {\r\n\r\n    var mce = {};\r\n    var vue;\r\n\r\n    function uploadRD(darray) {\r\n        $('#loader').modal('show');\r\n        var loader = $('#loader').find('.loader');\r\n        var updatep = function(n) {\r\n            loader.text('uploading ' + n + 'of ' + darray.length);\r\n        }\r\n        _.forEach(darray, function(val, index) {\r\n            index++;\r\n            updatep(index);\r\n            data = {\r\n                date: GetCurrentDate(),\r\n                type: $('#upload-type').val(),\r\n                title: val.title,\r\n                name: val.name,\r\n                source: val.source,\r\n                path: val.path\r\n            }\r\n            console.log(data);\r\n\r\n            $.post('/add_new_post', data, function(res) {\r\n                $('#loader').modal('hide');\r\n                console.log(res);\r\n                //loadContent(res.url);\r\n            });\r\n        })\r\n        loadContent('/home');\r\n    }\r\n\r\n    function getQuoteText(htmlStr) {\r\n        var p;\r\n        $(htmlStr).find('*').each(function() {\r\n            if ($(this).text().length > 32) {\r\n                p = $(this).text();\r\n                return false;\r\n            }\r\n        })\r\n        return p\r\n    }\r\n\r\n    function Att() {\r\n        this.title = '';\r\n        this.name = '';\r\n        this.source = '';\r\n        this.path = '';\r\n        this.progress = '0%';\r\n        this.updateProgress = (oEvent) => {\r\n            this.progress = computProgress(oEvent);\r\n        };\r\n        var fileUploadReq = new XMLHttpRequest();\r\n        fileUploadReq.withCredentials = false;\r\n        fileUploadReq.open('POST', '/files');\r\n\r\n        fileUploadReq.onload = () => {\r\n            var json = JSON.parse(fileUploadReq.responseText);\r\n            this.path = json.location;\r\n        };\r\n        fileUploadReq.upload.addEventListener(\"progress\", this.updateProgress, false);\r\n        this.uploadFile = (ele) => {\r\n            this.name = ele.files[0].name;\r\n            var form = $(ele).parent('.frmfile')[0];\r\n            var formData = new FormData(form);\r\n            fileUploadReq.send(formData);\r\n        };\r\n        this.abort = function() {\r\n            fileUploadReq.abort();\r\n        }\r\n    }\r\n\r\n    function initManeger() {\r\n        var e = {\r\n            atts: {}\r\n        };\r\n        var attCount = 0;\r\n        e.states = []; //Array of upload process states, '1' means complete\r\n        e.addAtt = function() {\r\n            e.states.push(0);\r\n            attCount++;\r\n            var attname = 'att' + attCount;\r\n            var newAtt = new Att();\r\n            e.atts[attname] = newAtt;\r\n            var newForm = $('<form>').attr({\r\n                'class': 'frmfile',\r\n                'enctype': 'multipart/form-data',\r\n                'method': 'post',\r\n                'hidden': 1\r\n            });\r\n            var fileInput = $('<input>').attr({\r\n                'id': 'iptfile' + attCount,\r\n                'type': 'file',\r\n                'name': 'file' + attCount,\r\n                'hidden': 1\r\n            }).change(function() {\r\n                newAtt.uploadFile(this);\r\n            })\r\n            $('body').append(newForm.append(fileInput));\r\n            fileInput.click();\r\n            return newAtt\r\n        };\r\n        e.wrapUp = function() {\r\n            var html = '';\r\n            _.forEach(vue.atts, function(att, index) {\r\n                index++;\r\n                html += '<p>附件.' + index + '： <a href=\"' + att.path + '\" download=\"' + att.name + '\">' + att.name + '</a>' + '</p>';\r\n            })\r\n            return html;\r\n        }\r\n        return e;\r\n    };\r\n    \r\n    mce.init = function(type) {\r\n        console.log(type);\r\n        if (type == 'refe') {\r\n            $('.news-only').hide();\r\n            $('.data-only').hide();\r\n            $('.refe-only').show();\r\n            $('#btn-add').show();\r\n            vue = new Vue({\r\n                el: '#app-r',\r\n                data: {\r\n                    refes: []\r\n                },\r\n                methods: {\r\n                    remove: function(refe) {\r\n                        refe.abort();\r\n                        this.refes.$remove(refe);\r\n                    }\r\n                }\r\n            })\r\n            var refeManager = initManeger();\r\n            $('#btn-add').off('click');\r\n            $('#btn-add').click(function() {\r\n                vue.refes.push(refeManager.addAtt());\r\n            });\r\n            $('#btn-upload').off('click');\r\n            $('#btn-upload').click(function() {\r\n                uploadRD(vue.refes)\r\n            })\r\n        } else if (type == 'data') {\r\n            $('.news-only').hide();\r\n            $('.refe-only').hide();\r\n            $('.data-only').show();\r\n            $('#btn-add').show();\r\n            vue = new Vue({\r\n                el: '#app-d',\r\n                data: {\r\n                    datas: []\r\n                },\r\n                methods: {\r\n                    remove: function(data) {\r\n                        data.abort();\r\n                        this.datas.$remove(data);\r\n                    }\r\n                }\r\n            })\r\n            var dataManager = initManeger();\r\n            $('#btn-add').off('click');\r\n            $('#btn-add').click(function() {\r\n                vue.datas.push(dataManager.addAtt());\r\n            });\r\n            $('#btn-upload').off('click');\r\n            $('#btn-upload').click(function() {\r\n                uploadRD(vue.datas)\r\n            })\r\n        } else {\r\n            $('.news-only').show();\r\n            $('.refe-only').show();\r\n            $('.data-only').hide();\r\n            $('.refe-only').hide();\r\n            $('#btn-add').hide();\r\n            $('#upload-type').change(function() {\r\n                mce.init($(this).val())\r\n            })\r\n            var attManager = initManeger();\r\n            tinymce.EditorManager.remove('#input-body');\r\n            $('#btn-add').hide();\r\n            tinymce.init({\r\n                selector: '#input-body', // change this value according to your HTML\r\n                //inline:true,\r\n                plugins: \"advlist link anchor paste image autoresize preview imagetools\",\r\n                toolbar: 'undo redo formatselect advlist fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright link image preview',\r\n                image_caption: true,\r\n                paste_data_images: true,\r\n                fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt 36pt',\r\n                menubar: false,\r\n                images_upload_url: '/images',\r\n                content_css: 'stylesheets/style.min.css',\r\n                min_width: 420,\r\n                max_height: 960\r\n            });\r\n            vue = new Vue({\r\n                el: '#app',\r\n                data: {\r\n                    atts: []\r\n                },\r\n                methods: {\r\n                    remove: function(att) {\r\n                        att.abort();\r\n                        this.atts.$remove(att);\r\n                    }\r\n                }\r\n            })\r\n            $('#input-img').off('change');\r\n            $('#input-img').change(function() {\r\n                if (this.files && this.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img src=\"' + e.target.result + '\" width=\"80%\" >');\r\n\r\n                        tinymce.activeEditor.uploadImages();\r\n                    }\r\n                    reader.readAsDataURL(this.files[0]);\r\n                }\r\n            });\r\n            $('#input-date').val(GetCurrentDate());\r\n            $('#btn-att').off('click');\r\n            $('#btn-att').click(function() {\r\n                vue.atts.push(attManager.addAtt());\r\n            });\r\n\r\n            $('#btn-upload').off('click');\r\n            $('#btn-img').click(function() {\r\n                $('#input-img').click();\r\n            });\r\n            $('#btn-upload').off('click');\r\n            $('#btn-upload').click(function() {\r\n                $('#loader').modal('show');\r\n                var loader = $('#loader').find('.loader');\r\n                loader.text('uploading Images');\r\n                tinymce.activeEditor.uploadImages(function(success) {\r\n                    loader.text('wrapping together');\r\n                    tinymce.activeEditor.save();\r\n                    var attHtml = attManager.wrapUp(vue.atts);\r\n                    var data = {\r\n                        type: $('#upload-type').val(),\r\n                        title: $('#input-title').val(),\r\n                        date: $('#input-date').val(),\r\n                        owner: Cookies.get('username'),\r\n                        source: $('#input-source').val(),\r\n                        cover: $($('#input-body').val()).find('img').attr('src'),\r\n                        quote: getQuoteText($('#input-body').val()),\r\n                        body: $('#input-body').val() + attHtml,\r\n                        att: attHtml\r\n                    };\r\n                    loader.text('pendding');\r\n                    $.post('/add_new_post', data, function(res) {\r\n                        $('#loader').modal('hide');\r\n                        loadContent(res.url);\r\n                    });\r\n                });\r\n            })\r\n        }\r\n    };\r\n    return mce\r\n}()\r\n"],"sourceRoot":"/source/"}