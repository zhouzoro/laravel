{"version":3,"sources":["main.babeled.min.js","main.babeled.js"],"names":["setReplistNav","$","$list","listPos","listLen","length","currentPos","up","css","down","click","setInfoNav","width","height","console","log","this","data","toggleSidebar","sidebar","ScrollTop","body","stop","animate","scrollTop","showScrollTop","checkVisible","removeClass","addClass","changeToolBarPosition","$mceToolbar","$editorOps","elm","evalType","vpH","window","st","y","offset","top","elementHeight","scrollTo","eleId","initMce","selector","docId","inline","tinymce","init","skin","language","plugins","toolbar","image_caption","paste_data_images","fontsize_formats","menubar","images_upload_url","statusbar","min_height","uploadPic","img","next","loader","find","label","tempImgInput","attr","type","class","display","position","change","files","reader","FileReader","onload","e","target","result","readAsDataURL","updateProgress","oEvent","pct","Math","ceil","loaded","total","text","fileUploadReq","XMLHttpRequest","withCredentials","open","json","JSON","parse","responseText","location","remove","upload","addEventListener","formData","FormData","append","name","send","computProgress","percentComplete","GetCurrentDate","cdate","Date","month","getMonth","currentDate","getFullYear","getDate","getQuoteText","htmlStr","p","each","document","ready","scroll","scrollStatus","scrollRecord","setPosition","recordScroll","direction","continuous","adaptResize","resize","transloader","targetUrl","uploadType","get","res","html","show","hide","initUploadOf"],"mappings":"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","file":"main.babeled.min.js","sourcesContent":["'use strict';\n\n$(document).ready(function () {\n\n    $('#sidebar-hidden').find('.item.nav-link').click(function () {\n        $('.sidebar').sidebar('hide');\n    });\n    setReplistNav();\n    setInfoNav();\n    changeToolBarPosition();\n});\n\nfunction setReplistNav() {\n    if (!$('.report-intro-list-nav')[0]) return;\n\n    var $list = $('.report-intro-list');\n    var listPos = function () {\n        var listLen = $('.report-intro-list .item').length;\n        var currentPos = 1;\n        return {\n            up: function up() {\n                if (currentPos > 2) {\n                    currentPos = currentPos - 2;\n                } else {\n                    currentPos = 1;\n                }\n                $list.css('transform', 'translateY(' + (1 - currentPos) * 108 + 'px)');\n            },\n\n            down: function down() {\n                if (listLen - currentPos > 2) {\n                    currentPos = currentPos + 2;\n                } else {\n                    currentPos = listLen - 1;\n                }\n                $list.css('transform', 'translateY(' + (1 - currentPos) * 108 + 'px)');\n            }\n        };\n    }();\n    var $up = $('.report-intro-list-nav.up').click(listPos.up);\n    var $down = $('.report-intro-list-nav.down').click(listPos.down);\n}\n\nfunction setInfoNav() {\n    if (!$('.info-center')[0]) return;\n    var $list = $('.info-content-list');\n    $('.service-menu .item').click(function () {\n        var width = $('.info-content').height();\n        console.log(width);\n        console.log($(this));\n        $list.css('transform', 'translateY(' + ($(this).data('index') - 1) * -258.2 + 'px)');\n    });\n};\n// changeHeaderOrNot();\n$(document).scroll(function () {\n    changeToolBarPosition();\n});\nvar scrollStatus = {\n    scrollRecord: [0, 0],\n    init: function init() {\n        scrollStatus.setPosition();\n    },\n    setPosition: function setPosition() {\n        scrollStatus.position = $(window).scrollTop();\n    },\n    recordScroll: function recordScroll() {\n        scrollStatus.scrollRecord[1] = scrollStatus.scrollRecord[0];\n        scrollStatus.scrollRecord[0] = $(window).scrollTop() > scrollStatus.position ? -1 : 1;\n        scrollStatus.position = $(window).scrollTop();\n        scrollStatus.direction = scrollStatus.scrollRecord[0] === -1 ? 'down' : 'up';\n        scrollStatus.continuous = scrollStatus.scrollRecord[0] === scrollStatus.scrollRecord[1];\n    },\n    adaptResize: function adaptResize() {\n        scrollStatus.init();\n    }\n};\n\n$(document).ready(scrollStatus.init);\n$(window).resize(scrollStatus.adaptResize);\n\nfunction toggleSidebar() {\n    $('.sidebar').sidebar('toggle');\n}\n\nfunction ScrollTop() {\n    var body = $(\"html, body\");\n    body.stop().animate({\n        scrollTop: 0\n    }, '500');\n}\n\nfunction showScrollTop() {\n    if (!checkVisible($('#top-indicator'))) {\n        $('#vertical-nv').removeClass(\"normal\").addClass(\"pinned\");\n        $('#scroll-top').removeClass(\"out\").addClass(\"in\");\n    } else {\n        $('#vertical-nv').removeClass(\"pinned\").addClass(\"normal\");\n        $('#scroll-top').removeClass(\"in\").addClass(\"out\");\n    }\n}\n\nfunction changeToolBarPosition() {\n    var $mceToolbar = $('.mce-toolbar-grp.mce-container.mce-panel.mce-stack-layout-item.mce-first');\n    var $editorOps = $('#ops');\n    if ($mceToolbar[0]) {\n        if (!checkVisible($('.mce-top-indicator'))) {\n            $mceToolbar.addClass(\"pinned\");\n        } else {\n            $mceToolbar.removeClass(\"pinned\");\n        }\n    }\n    if ($editorOps[0]) {\n        if (!checkVisible($('footer'))) {\n            $editorOps.addClass(\"pinned\");\n        } else {\n            $editorOps.removeClass(\"pinned\");\n        }\n    }\n}\n\nfunction checkVisible(elm, evalType) {\n    evalType = evalType || 'visible';\n\n    var vpH = $(window).height(),\n\n\n    // Viewport Height\n    st = $(window).scrollTop(),\n\n\n    // Scroll Top\n    y = $(elm).offset().top,\n        elementHeight = $(elm).height();\n\n    if (evalType === 'visible') return y < vpH + st && y > st - elementHeight;\n    if (evalType === 'above') return y < vpH + st;\n}\n\nfunction scrollTo(eleId) {\n    var body = $(\"html, body\");\n    body.stop().animate({\n        scrollTop: $(eleId).offset().top\n    }, '500');\n}\n\nfunction initMce(selector, docId) {\n    var inline = false;\n    if (docId) inline = true;\n    tinymce.init({\n        selector: selector,\n        skin: 'mxc1',\n        language: 'zh_CN',\n        //content_css: '/stylesheets/mce.min.css',\n        //inline: inline,\n        plugins: 'table autoresize paste image imagetools preview',\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\n        //content_css: '/stylesheets/person.min.css',\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\n        toolbar: 'formatselect fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright alignfull advlist lists link image preview',\n        image_caption: true,\n        paste_data_images: true,\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\n        //plugins: \"contextmenu\",\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\n        menubar: false,\n        images_upload_url: '/upload/images',\n        statusbar: false,\n        min_height: 480\n    });\n}\n\n$('.add-btn').click(function () {\n    var transloader = $('<div>').attr('class', 'expand-transition');\n    $(this).append(transloader);\n    var targetUrl = $(this).data('url');\n    var uploadType = $(this).data('type');\n    $.get(targetUrl, function (res) {\n        $('#modal-cust').find('.container').html(res);\n        $('#btn-cancel').click(function () {\n            $('#body').show();\n            $('#modal-cust').hide('fast');\n            $('#modal-cust').find('.container').html('');\n        });\n        $('#modal-cust').show('slow');\n        $('#body').hide('slow');\n        initUploadOf(uploadType);\n        transloader.remove();\n        $('#edit-pic').click(uploadPic);\n    });\n});\n\nfunction uploadPic() {\n    var img = $(this).next('img');\n    var loader = $(this).find('#pic-loader');\n    var label = $(this).find('label');\n    var tempImgInput = $('<input>').attr({\n        'type': 'file',\n        'class': 'temp-input'\n    }).css({\n        'display': 'none',\n        'position': 'absolute'\n    }).change(function () {\n\n        if (this.files && this.files[0]) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                img.attr('src', e.target.result);\n            };\n            reader.readAsDataURL(this.files[0]);\n            label.removeClass('btn').addClass('pct');\n            var updateProgress = function updateProgress(oEvent) {\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\n                var height = 100 - pct;\n                loader.css({ 'height': height + 'px' });\n                label.text(pct + '%');\n            };\n            var fileUploadReq = new XMLHttpRequest();\n            fileUploadReq.withCredentials = false;\n            fileUploadReq.open('POST', '/images');\n\n            fileUploadReq.onload = function () {\n                var json = JSON.parse(fileUploadReq.responseText);\n                console.log(json.location);\n                img.attr('src', json.location);\n                label.removeClass('pct').addClass('btn').text('change');\n                $('.temp-input').remove();\n            };\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\n            var formData = new FormData();\n            formData.append('image', this.files[0], this.files[0].name);\n            fileUploadReq.send(formData);\n        }\n    });\n    $('body').append(tempImgInput);\n    tempImgInput.click();\n}\n\nfunction computProgress(oEvent) {\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\n    return percentComplete;\n}\n\n/*function initUploadOf(type, docId) {\r\n    initMce('#input-body', docId);\r\n    if (type === 'people') {\r\n        console.log('uploading type of ' + type);\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var people = $('#upload-people');\r\n            var data = {\r\n                name: people.find('#input-name').val(),\r\n                picture: people.find('#profile-pic').find('img').attr('src'),\r\n                title: people.find('#input-title').val(),\r\n                degree: people.find('#input-degree').val(),\r\n                office: people.find('#input-office').val(),\r\n                email: people.find('#input-email').val(),\r\n                phone: people.find('#input-phone').val(),\r\n                details: tinymce.activeEditor.save()\r\n            };\r\n            if (docId) data.id = docId;\r\n            $.post('/add_people', data, function(res) {\r\n                if (docId) document.location.reload(true);\r\n                else window.location = res.url;\r\n            });\r\n        })\r\n    } else {\r\n        var attManager = initManeger();\r\n        var vue = new Vue({\r\n            el: '#app',\r\n            data: {\r\n                atts: []\r\n            },\r\n            methods: {\r\n                remove: function remove(att) {\r\n                    att.abort();\r\n                    this.atts.$remove(att);\r\n                }\r\n            }\r\n        });\r\n        $('#btn-img').click(function() {\r\n            var tempImgInput = $('<input>').attr({\r\n                'type': 'file',\r\n                'class': 'temp-input'\r\n            }).css({\r\n                'display': 'none',\r\n                'position': 'absolute'\r\n            }).change(function() {\r\n                if (this.files && this.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"80%\" >');\r\n\r\n                        tinymce.activeEditor.uploadImages();\r\n                    };\r\n                    reader.readAsDataURL(this.files[0]);\r\n                }\r\n\r\n                $('.temp-input').remove();\r\n            });\r\n            $('body').append(tempImgInput);\r\n            tempImgInput.click();\r\n        });\r\n\r\n        $('#input-date').val(GetCurrentDate());\r\n        $('#btn-att').click(function() {\r\n            vue.atts.push(attManager.addAtt());\r\n        });\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var loader = $('#loader').find('.loader');\r\n            loader.text('uploading Images');\r\n            tinymce.activeEditor.uploadImages(function(success) {\r\n                loader.text('wrapping together');\r\n                var attHtml = attManager.wrapUp(vue.atts);\r\n                data = {\r\n                    title: $('#input-title').val(),\r\n                    date: $('#input-date').val(),\r\n                    source: $('#input-source').val(),\r\n                    cover: $(tinymce.activeEditor.save()).find('img').attr('src'),\r\n                    quote: getQuoteText(tinymce.activeEditor.save()),\r\n                    body: tinymce.activeEditor.save() + attHtml,\r\n                    att: attHtml\r\n                };\r\n                if (docId) data.id = docId;\r\n                loader.text('uploading');\r\n                var posturl = '/add_' + type;\r\n                $.post(posturl, data, function(res) {\r\n                    $('#loader').modal('hide');\r\n                    if (docId) document.location.reload(true);\r\n                    else window.location = res.url;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n}*/\n\nfunction GetCurrentDate() {\n    var cdate = new Date();\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\n    return currentDate;\n}\n\nfunction getQuoteText(htmlStr) {\n    var p = '';\n    $(htmlStr).find('*').each(function () {\n        if ($(this).text().length > 32) {\n            p = $(this).text();\n            return false;\n        }\n    });\n    return p;\n}","$(document).ready(function() {\r\n\r\n    $('#sidebar-hidden').find('.item.nav-link').click(function() {\r\n        $('.sidebar').sidebar('hide');\r\n    });\r\n    setReplistNav();\r\n    setInfoNav();\r\n    changeToolBarPosition();\r\n});\r\n\r\nfunction setReplistNav() {\r\n    if (!$('.report-intro-list-nav')[0]) return;\r\n\r\n    var $list = $('.report-intro-list');\r\n    var listPos = function() {\r\n        var listLen = $('.report-intro-list .item').length;\r\n        var currentPos = 1;\r\n        return {\r\n            up: function() {\r\n                if (currentPos > 2) {\r\n                    currentPos = currentPos - 2;\r\n                } else {\r\n                    currentPos = 1;\r\n                }\r\n                $list.css('transform', 'translateY(' + (1 - currentPos) * 108 + 'px)');\r\n            },\r\n\r\n            down: function() {\r\n                if (listLen - currentPos > 2) {\r\n                    currentPos = currentPos + 2;\r\n                } else {\r\n                    currentPos = listLen - 1;\r\n                }\r\n                $list.css('transform', 'translateY(' + (1 - currentPos) * 108 + 'px)');\r\n            }\r\n        }\r\n    }();\r\n    var $up = $('.report-intro-list-nav.up').click(listPos.up);\r\n    var $down = $('.report-intro-list-nav.down').click(listPos.down);\r\n}\r\n\r\nfunction setInfoNav() {\r\n    if (!$('.info-center')[0]) return;\r\n    var $list = $('.info-content-list');\r\n    $('.service-menu .item').click(function() {\r\n        var width = $('.info-content').height();\r\n        console.log(width);\r\n        console.log($(this));\r\n        $list.css('transform', 'translateY(' + ($(this).data('index')-1) * -258.2 + 'px)');\r\n    })\r\n\r\n};\r\n// changeHeaderOrNot();\r\n$(document).scroll(function() {\r\n    changeToolBarPosition();\r\n});\r\nvar scrollStatus = {\r\n    scrollRecord: [0, 0],\r\n    init: function init() {\r\n        scrollStatus.setPosition();\r\n    },\r\n    setPosition: function setPosition() {\r\n        scrollStatus.position = $(window).scrollTop();\r\n    },\r\n    recordScroll: function recordScroll() {\r\n        scrollStatus.scrollRecord[1] = scrollStatus.scrollRecord[0];\r\n        scrollStatus.scrollRecord[0] = $(window).scrollTop() > scrollStatus.position ? -1 : 1;\r\n        scrollStatus.position = $(window).scrollTop();\r\n        scrollStatus.direction = scrollStatus.scrollRecord[0] === -1 ? 'down' : 'up';\r\n        scrollStatus.continuous = scrollStatus.scrollRecord[0] === scrollStatus.scrollRecord[1];\r\n    },\r\n    adaptResize: function adaptResize() {\r\n        scrollStatus.init();\r\n    }\r\n};\r\n\r\n$(document).ready(scrollStatus.init);\r\n$(window).resize(scrollStatus.adaptResize);\r\n\r\n\r\nfunction toggleSidebar() {\r\n    $('.sidebar').sidebar('toggle');\r\n}\r\n\r\nfunction ScrollTop() {\r\n    var body = $(\"html, body\");\r\n    body.stop().animate({\r\n        scrollTop: 0\r\n    }, '500');\r\n}\r\n\r\nfunction showScrollTop() {\r\n    if (!checkVisible($('#top-indicator'))) {\r\n        $('#vertical-nv').removeClass(\"normal\").addClass(\"pinned\");\r\n        $('#scroll-top').removeClass(\"out\").addClass(\"in\");\r\n    } else {\r\n        $('#vertical-nv').removeClass(\"pinned\").addClass(\"normal\");\r\n        $('#scroll-top').removeClass(\"in\").addClass(\"out\");\r\n    }\r\n}\r\n\r\nfunction changeToolBarPosition() {\r\n    var $mceToolbar = $('.mce-toolbar-grp.mce-container.mce-panel.mce-stack-layout-item.mce-first');\r\n    var $editorOps = $('#ops');\r\n    if ($mceToolbar[0]) {\r\n        if (!checkVisible($('.mce-top-indicator'))) {\r\n            $mceToolbar.addClass(\"pinned\");\r\n        } else {\r\n            $mceToolbar.removeClass(\"pinned\");\r\n        }\r\n    }\r\n    if ($editorOps[0]) {\r\n        if (!checkVisible($('footer'))) {\r\n            $editorOps.addClass(\"pinned\");\r\n        } else {\r\n            $editorOps.removeClass(\"pinned\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkVisible(elm, evalType) {\r\n    evalType = evalType || 'visible';\r\n\r\n    var vpH = $(window).height(),\r\n\r\n\r\n        // Viewport Height\r\n        st = $(window).scrollTop(),\r\n\r\n\r\n        // Scroll Top\r\n        y = $(elm).offset().top,\r\n        elementHeight = $(elm).height();\r\n\r\n    if (evalType === 'visible') return y < vpH + st && y > st - elementHeight;\r\n    if (evalType === 'above') return y < vpH + st;\r\n}\r\n\r\nfunction scrollTo(eleId) {\r\n    var body = $(\"html, body\");\r\n    body.stop().animate({\r\n        scrollTop: $(eleId).offset().top\r\n    }, '500');\r\n}\r\n\r\nfunction initMce(selector, docId) {\r\n    var inline = false;\r\n    if (docId) inline = true;\r\n    tinymce.init({\r\n        selector: selector,\r\n        skin: 'mxc1',\r\n        language: 'zh_CN',\r\n        //content_css: '/stylesheets/mce.min.css',\r\n        //inline: inline,\r\n        plugins: 'table autoresize paste image imagetools preview',\r\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\r\n        //content_css: '/stylesheets/person.min.css',\r\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\r\n        toolbar: 'formatselect fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright alignfull advlist lists link image preview',\r\n        image_caption: true,\r\n        paste_data_images: true,\r\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\r\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\r\n        //plugins: \"contextmenu\",\r\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\r\n        menubar: false,\r\n        images_upload_url: '/upload/images',\r\n        statusbar: false,\r\n        min_height: 480\r\n    });\r\n}\r\n\r\n$('.add-btn').click(function() {\r\n    var transloader = $('<div>').attr('class', 'expand-transition');\r\n    $(this).append(transloader);\r\n    var targetUrl = $(this).data('url');\r\n    var uploadType = $(this).data('type');\r\n    $.get(targetUrl, function(res) {\r\n        $('#modal-cust').find('.container').html(res);\r\n        $('#btn-cancel').click(function() {\r\n            $('#body').show();\r\n            $('#modal-cust').hide('fast');\r\n            $('#modal-cust').find('.container').html('');\r\n        });\r\n        $('#modal-cust').show('slow');\r\n        $('#body').hide('slow');\r\n        initUploadOf(uploadType);\r\n        transloader.remove();\r\n        $('#edit-pic').click(uploadPic);\r\n    });\r\n});\r\n\r\nfunction uploadPic() {\r\n    var img = $(this).next('img');\r\n    var loader = $(this).find('#pic-loader');\r\n    var label = $(this).find('label');\r\n    var tempImgInput = $('<input>').attr({\r\n        'type': 'file',\r\n        'class': 'temp-input'\r\n    }).css({\r\n        'display': 'none',\r\n        'position': 'absolute'\r\n    }).change(function() {\r\n\r\n        if (this.files && this.files[0]) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function(e) {\r\n                img.attr('src', e.target.result);\r\n            };\r\n            reader.readAsDataURL(this.files[0]);\r\n            label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };\r\n            var fileUploadReq = new XMLHttpRequest();\r\n            fileUploadReq.withCredentials = false;\r\n            fileUploadReq.open('POST', '/images');\r\n\r\n            fileUploadReq.onload = function() {\r\n                var json = JSON.parse(fileUploadReq.responseText);\r\n                console.log(json.location);\r\n                img.attr('src', json.location);\r\n                label.removeClass('pct').addClass('btn').text('change');\r\n                $('.temp-input').remove();\r\n            };\r\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\r\n            var formData = new FormData();\r\n            formData.append('image', this.files[0], this.files[0].name);\r\n            fileUploadReq.send(formData);\r\n        }\r\n    });\r\n    $('body').append(tempImgInput);\r\n    tempImgInput.click();\r\n}\r\n\r\nfunction computProgress(oEvent) {\r\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\r\n    return percentComplete;\r\n}\r\n\r\n/*function initUploadOf(type, docId) {\r\n    initMce('#input-body', docId);\r\n    if (type === 'people') {\r\n        console.log('uploading type of ' + type);\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var people = $('#upload-people');\r\n            var data = {\r\n                name: people.find('#input-name').val(),\r\n                picture: people.find('#profile-pic').find('img').attr('src'),\r\n                title: people.find('#input-title').val(),\r\n                degree: people.find('#input-degree').val(),\r\n                office: people.find('#input-office').val(),\r\n                email: people.find('#input-email').val(),\r\n                phone: people.find('#input-phone').val(),\r\n                details: tinymce.activeEditor.save()\r\n            };\r\n            if (docId) data.id = docId;\r\n            $.post('/add_people', data, function(res) {\r\n                if (docId) document.location.reload(true);\r\n                else window.location = res.url;\r\n            });\r\n        })\r\n    } else {\r\n        var attManager = initManeger();\r\n        var vue = new Vue({\r\n            el: '#app',\r\n            data: {\r\n                atts: []\r\n            },\r\n            methods: {\r\n                remove: function remove(att) {\r\n                    att.abort();\r\n                    this.atts.$remove(att);\r\n                }\r\n            }\r\n        });\r\n        $('#btn-img').click(function() {\r\n            var tempImgInput = $('<input>').attr({\r\n                'type': 'file',\r\n                'class': 'temp-input'\r\n            }).css({\r\n                'display': 'none',\r\n                'position': 'absolute'\r\n            }).change(function() {\r\n                if (this.files && this.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"80%\" >');\r\n\r\n                        tinymce.activeEditor.uploadImages();\r\n                    };\r\n                    reader.readAsDataURL(this.files[0]);\r\n                }\r\n\r\n                $('.temp-input').remove();\r\n            });\r\n            $('body').append(tempImgInput);\r\n            tempImgInput.click();\r\n        });\r\n\r\n        $('#input-date').val(GetCurrentDate());\r\n        $('#btn-att').click(function() {\r\n            vue.atts.push(attManager.addAtt());\r\n        });\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var loader = $('#loader').find('.loader');\r\n            loader.text('uploading Images');\r\n            tinymce.activeEditor.uploadImages(function(success) {\r\n                loader.text('wrapping together');\r\n                var attHtml = attManager.wrapUp(vue.atts);\r\n                data = {\r\n                    title: $('#input-title').val(),\r\n                    date: $('#input-date').val(),\r\n                    source: $('#input-source').val(),\r\n                    cover: $(tinymce.activeEditor.save()).find('img').attr('src'),\r\n                    quote: getQuoteText(tinymce.activeEditor.save()),\r\n                    body: tinymce.activeEditor.save() + attHtml,\r\n                    att: attHtml\r\n                };\r\n                if (docId) data.id = docId;\r\n                loader.text('uploading');\r\n                var posturl = '/add_' + type;\r\n                $.post(posturl, data, function(res) {\r\n                    $('#loader').modal('hide');\r\n                    if (docId) document.location.reload(true);\r\n                    else window.location = res.url;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n}*/\r\n\r\nfunction GetCurrentDate() {\r\n    var cdate = new Date();\r\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\r\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\r\n    return currentDate;\r\n}\r\n\r\nfunction getQuoteText(htmlStr) {\r\n    var p = '';\r\n    $(htmlStr).find('*').each(function() {\r\n        if ($(this).text().length > 32) {\r\n            p = $(this).text();\r\n            return false;\r\n        }\r\n    });\r\n    return p;\r\n}\r\n"],"sourceRoot":"/source/"}