{"version":3,"sources":["post.babeled.min.js","post.babeled.js"],"names":["initMce","selector","docId","inline","tinymce","init","skin","language","content_css","body_class","plugins","toolbar","image_caption","paste_data_images","fontsize_formats","menubar","images_upload_url","statusbar","min_height","uploadPic","img","$","this","next","loader","find","label","tempImgInput","attr","type","class","css","display","position","change","files","reader","FileReader","onload","e","target","result","readAsDataURL","removeClass","addClass","updateProgress","oEvent","pct","Math","ceil","loaded","total","height","text","fileUploadReq","XMLHttpRequest","withCredentials","open","json","JSON","parse","responseText","console","log","location","remove","upload","addEventListener","formData","FormData","append","name","send","click","uploadHero","hero","background","background-size","val","computProgress","percentComplete","uploadPost","GetCurrentDate","cdate","Date","month","getMonth","currentDate","getFullYear","getDate","getQuoteText","htmlStr","p","each","length","document","ready","showNames","_this","resList","get","res","empty","geonames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","geoname","value","listItem","listLink","geonameId","toponymName","countryName","err","activeEditor","execCommand","uploadImages","keyup","transloader","targetUrl","data","uploadType","html","show","hide","initUploadOf"],"mappings":"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","file":"post.babeled.min.js","sourcesContent":["'use strict';\n\n$(document).ready(function () {\n    initMce('#input-body');\n\n    $('#btn-img').click(function () {\n        var tempImgInput = $('<input>').attr({\n            'type': 'file',\n            'class': 'temp-input'\n        }).css({\n            'display': 'none',\n            'position': 'absolute'\n        }).change(function () {\n            if (this.files && this.files[0]) {\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"100%\" >');\n\n                    tinymce.activeEditor.uploadImages();\n                };\n                reader.readAsDataURL(this.files[0]);\n            }\n\n            $('.temp-input').remove();\n        });\n        $('body').append(tempImgInput);\n        tempImgInput.click();\n    });\n\n    ///////geonames\n    function showNames() {\n        var _this = this;\n        var resList = $(_this).next('.result');\n        $.get('http://api.geonames.org/searchJSON?lang=ZH&username=zhouzoro&maxRows=10&q=' + $(_this).val(), function (res) {\n            resList.empty();\n            if (res.geonames.length === 0) {\n                resList.append('No Results Found');\n            }\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = res.geonames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var geoname = _step.value;\n\n                    var listItem = $('<li>').attr('class', 'geoname-resultlist-item');\n                    var listLink = $('<a>').attr('data-id', geoname.geonameId).append($('<span>').attr('class', 'name').text(geoname.name)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\n                    if (geoname.countryName && geoname.countryName !== '') {\n                        listLink.append($('<span>').attr('class', 'countryName').text(', ' + geoname.countryName)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\n                    }\n                    resList.append(listItem.append(listLink));\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        });\n    }\n    $('.geosearch').keyup(showNames).change(showNames);\n});\n\nfunction initMce(selector, docId) {\n    var inline = false;\n    if (docId) inline = true;\n    tinymce.init({\n        selector: selector,\n        skin: 'mxc1',\n        language: 'zh_CN',\n        content_css: '/stylesheets/dist/travelogue.min.css',\n        body_class: 'travelogue',\n        //inline: inline,\n        plugins: 'table autoresize paste image imagetools preview',\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\n        //content_css: '/stylesheets/person.min.css',\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\n        toolbar: 'undo redo formatselect fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright alignfull advlist lists link',\n        image_caption: true,\n        paste_data_images: true,\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\n        //plugins: \"contextmenu\",\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\n        menubar: false,\n        images_upload_url: '/upload/images',\n        statusbar: false,\n        min_height: 480\n    });\n}\n\n$('.add-btn').click(function () {\n    var transloader = $('<div>').attr('class', 'expand-transition');\n    $(this).append(transloader);\n    var targetUrl = $(this).data('url');\n    var uploadType = $(this).data('type');\n    $.get(targetUrl, function (res) {\n        $('#modal-cust').find('.container').html(res);\n        $('#btn-cancel').click(function () {\n            $('#body').show();\n            $('#modal-cust').hide('fast');\n            $('#modal-cust').find('.container').html('');\n        });\n        $('#modal-cust').show('slow');\n        $('#body').hide('slow');\n        initUploadOf(uploadType);\n        transloader.remove();\n        $('#edit-pic').click(uploadPic);\n    });\n});\n\nfunction uploadPic() {\n    var img = $(this).next('img');\n    var loader = $(this).find('#pic-loader');\n    var label = $(this).find('label');\n    var tempImgInput = $('<input>').attr({\n        'type': 'file',\n        'class': 'temp-input'\n    }).css({\n        'display': 'none',\n        'position': 'absolute'\n    }).change(function () {\n        if (this.files && this.files[0]) {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                img.attr('src', e.target.result);\n            };\n            reader.readAsDataURL(this.files[0]);\n            label.removeClass('btn').addClass('pct');\n            var updateProgress = function updateProgress(oEvent) {\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\n                var height = 100 - pct;\n                loader.css({ 'height': height + 'px' });\n                label.text(pct + '%');\n            };\n            var fileUploadReq = new XMLHttpRequest();\n            fileUploadReq.withCredentials = false;\n            fileUploadReq.open('POST', '/images');\n\n            fileUploadReq.onload = function () {\n                var json = JSON.parse(fileUploadReq.responseText);\n                console.log(json.location);\n                img.attr('src', json.location);\n                label.removeClass('pct').addClass('btn').text('change');\n                $('.temp-input').remove();\n            };\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\n            var formData = new FormData();\n            formData.append('image', this.files[0], this.files[0].name);\n            fileUploadReq.send(formData);\n        }\n    });\n    $('body').append(tempImgInput);\n    tempImgInput.click();\n}\n\nfunction uploadHero() {\n    var hero = $('.post-hero');\n    var tempImgInput = $('<input>').attr({\n        'type': 'file',\n        'class': 'temp-input'\n    }).css({\n        'display': 'none',\n        'position': 'absolute'\n    }).change(function () {\n\n        if (this.files && this.files[0]) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                hero.css({ 'background': 'url(\"' + e.target.result + '\")', 'background-size': 'cover' });\n            };\n            reader.readAsDataURL(this.files[0]);\n            /*label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };*/\n            var fileUploadReq = new XMLHttpRequest();\n            fileUploadReq.withCredentials = false;\n            fileUploadReq.open('POST', '/upload/images');\n\n            fileUploadReq.onload = function () {\n                var json = JSON.parse(fileUploadReq.responseText);\n                hero.css({ 'background': 'url(\"' + json.location + '\")', 'background-size': 'cover' });\n                $('.input-hero-img').val(json.location);\n                console.log($('.input-hero-img').val());\n                //label.removeClass('pct').addClass('btn').text('change');\n                $('.temp-input').remove();\n            };\n            //fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\n            var formData = new FormData();\n            formData.append('image', this.files[0], this.files[0].name);\n            fileUploadReq.send(formData);\n        }\n    });\n    $('body').append(tempImgInput);\n    tempImgInput.click();\n}\n\nfunction computProgress(oEvent) {\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\n    return percentComplete;\n}\n\n/*function initUploadOf(type, docId) {\r\n    initMce('#input-body', docId);\r\n    if (type === 'people') {\r\n        console.log('uploading type of ' + type);\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var people = $('#upload-people');\r\n            var data = {\r\n                name: people.find('#input-name').val(),\r\n                picture: people.find('#profile-pic').find('img').attr('src'),\r\n                title: people.find('#input-title').val(),\r\n                degree: people.find('#input-degree').val(),\r\n                office: people.find('#input-office').val(),\r\n                email: people.find('#input-email').val(),\r\n                phone: people.find('#input-phone').val(),\r\n                details: tinymce.activeEditor.save()\r\n            };\r\n            if (docId) data.id = docId;\r\n            $.post('/add_people', data, function(res) {\r\n                if (docId) document.location.reload(true);\r\n                else window.location = res.url;\r\n            });\r\n        })\r\n    } else {\r\n        var attManager = initManeger();\r\n        var vue = new Vue({\r\n            el: '#app',\r\n            data: {\r\n                atts: []\r\n            },\r\n            methods: {\r\n                remove: function remove(att) {\r\n                    att.abort();\r\n                    this.atts.$remove(att);\r\n                }\r\n            }\r\n        });\r\n        $('#btn-img').click(function() {\r\n            var tempImgInput = $('<input>').attr({\r\n                'type': 'file',\r\n                'class': 'temp-input'\r\n            }).css({\r\n                'display': 'none',\r\n                'position': 'absolute'\r\n            }).change(function() {\r\n                if (this.files && this.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"80%\" >');\r\n\r\n                        tinymce.activeEditor.uploadImages();\r\n                    };\r\n                    reader.readAsDataURL(this.files[0]);\r\n                }\r\n\r\n                $('.temp-input').remove();\r\n            });\r\n            $('body').append(tempImgInput);\r\n            tempImgInput.click();\r\n        });\r\n\r\n        $('#input-date').val(GetCurrentDate());\r\n        $('#btn-att').click(function() {\r\n            vue.atts.push(attManager.addAtt());\r\n        });\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var loader = $('#loader').find('.loader');\r\n            loader.text('uploading Images');\r\n            tinymce.activeEditor.uploadImages(function(success) {\r\n                loader.text('wrapping together');\r\n                var attHtml = attManager.wrapUp(vue.atts);\r\n                data = {\r\n                    title: $('#input-title').val(),\r\n                    date: $('#input-date').val(),\r\n                    source: $('#input-source').val(),\r\n                    cover: $(tinymce.activeEditor.save()).find('img').attr('src'),\r\n                    quote: getQuoteText(tinymce.activeEditor.save()),\r\n                    body: tinymce.activeEditor.save() + attHtml,\r\n                    att: attHtml\r\n                };\r\n                if (docId) data.id = docId;\r\n                loader.text('uploading');\r\n                var posturl = '/add_' + type;\r\n                $.post(posturl, data, function(res) {\r\n                    $('#loader').modal('hide');\r\n                    if (docId) document.location.reload(true);\r\n                    else window.location = res.url;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n}*/\nfunction uploadPost() {}\n\nfunction GetCurrentDate() {\n    var cdate = new Date();\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\n    return currentDate;\n}\n\nfunction getQuoteText(htmlStr) {\n    var p = '';\n    $(htmlStr).find('*').each(function () {\n        if ($(this).text().length > 32) {\n            p = $(this).text();\n            return false;\n        }\n    });\n    return p;\n}","$(document).ready(() => {\r\n    initMce('#input-body');\r\n\r\n    $('#btn-img').click(function() {\r\n        var tempImgInput = $('<input>').attr({\r\n            'type': 'file',\r\n            'class': 'temp-input'\r\n        }).css({\r\n            'display': 'none',\r\n            'position': 'absolute'\r\n        }).change(function() {\r\n            if (this.files && this.files[0]) {\r\n                var reader = new FileReader();\r\n                reader.onload = function(e) {\r\n                    tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"100%\" >');\r\n\r\n                    tinymce.activeEditor.uploadImages();\r\n                };\r\n                reader.readAsDataURL(this.files[0]);\r\n            }\r\n\r\n            $('.temp-input').remove();\r\n        });\r\n        $('body').append(tempImgInput);\r\n        tempImgInput.click();\r\n    });\r\n\r\n    ///////geonames\r\n    function showNames() {\r\n        var _this = this;\r\n        var resList = $(_this).next('.result');\r\n        $.get('http://api.geonames.org/searchJSON?lang=ZH&username=zhouzoro&maxRows=10&q=' + $(_this).val(), function(res) {\r\n            resList.empty();\r\n            if (res.geonames.length === 0) {\r\n                resList.append('No Results Found');\r\n            }\r\n            for (let geoname of res.geonames) {\r\n                var listItem = $('<li>').attr('class', 'geoname-resultlist-item');\r\n                var listLink = $('<a>').attr('data-id', geoname.geonameId).append($('<span>').attr('class', 'name').text(geoname.name)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\r\n                if (geoname.countryName && geoname.countryName !== '') {\r\n                    listLink.append($('<span>').attr('class', 'countryName').text(', ' + geoname.countryName)).append($('<span>').attr('class', 'toponymName').text('(' + geoname.toponymName + ')'));\r\n                }\r\n                resList.append(listItem.append(listLink));\r\n            }\r\n        })\r\n\r\n    }\r\n    $('.geosearch').keyup(showNames).change(showNames);\r\n});\r\n\r\n\r\nfunction initMce(selector, docId) {\r\n    var inline = false;\r\n    if (docId) inline = true;\r\n    tinymce.init({\r\n        selector: selector,\r\n        skin: 'mxc1',\r\n        language: 'zh_CN',\r\n        content_css: '/stylesheets/dist/travelogue.min.css',\r\n        body_class: 'travelogue',\r\n        //inline: inline,\r\n        plugins: 'table autoresize paste image imagetools preview',\r\n        /*style_formats: [{ title: 'H1', block: 'h1' }, { title: 'H2', block: 'h2' }, { title: 'H3', block: 'h3' }, { title: 'Bold text', inline: 'strong' }, { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } }, { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } }, { title: 'Badge', inline: 'span', styles: { display: 'inline-block', border: '1px solid #2276d2', 'border-radius': '5px', padding: '2px 5px', margin: '0 2px', color: '#2276d2' } }, { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }],\r\n        formats: {\r\n            alignleft: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'left' },\r\n            aligncenter: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'center' },\r\n            alignright: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'right' },\r\n            alignfull: { selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img', classes: 'full' },\r\n            bold: { inline: 'span', 'classes': 'bold' },\r\n            italic: { inline: 'span', 'classes': 'italic' },\r\n            underline: { inline: 'span', 'classes': 'underline', exact: true },\r\n            strikethrough: { inline: 'del' },\r\n            customformat: { inline: 'span', styles: { color: '#00ff00', fontSize: '20px' }, attributes: { title: 'My custom format' }, classes: 'example1' }\r\n        },*/\r\n        //content_css: '/stylesheets/person.min.css',\r\n        //plugins: \"advlist lists link anchor contextmenu paste image autoresize preview imagetools lists\",\r\n        toolbar: 'undo redo formatselect fontsizeselect bold italic underline strikethrough alignleft aligncenter alignright alignfull advlist lists link',\r\n        image_caption: true,\r\n        paste_data_images: true,\r\n        //block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',\r\n        fontsize_formats: '8pt 9pt 10pt 11pt 12pt 14pt 18pt 24pt',\r\n        //plugins: \"contextmenu\",\r\n        //contextmenu: \"formatselect bold italic link image inserttable | cell row column deletetable\",\r\n        menubar: false,\r\n        images_upload_url: '/upload/images',\r\n        statusbar: false,\r\n        min_height: 480\r\n    });\r\n}\r\n\r\n$('.add-btn').click(function() {\r\n    var transloader = $('<div>').attr('class', 'expand-transition');\r\n    $(this).append(transloader);\r\n    var targetUrl = $(this).data('url');\r\n    var uploadType = $(this).data('type');\r\n    $.get(targetUrl, function(res) {\r\n        $('#modal-cust').find('.container').html(res);\r\n        $('#btn-cancel').click(function() {\r\n            $('#body').show();\r\n            $('#modal-cust').hide('fast');\r\n            $('#modal-cust').find('.container').html('');\r\n        });\r\n        $('#modal-cust').show('slow');\r\n        $('#body').hide('slow');\r\n        initUploadOf(uploadType);\r\n        transloader.remove();\r\n        $('#edit-pic').click(uploadPic);\r\n    });\r\n});\r\n\r\nfunction uploadPic() {\r\n    var img = $(this).next('img');\r\n    var loader = $(this).find('#pic-loader');\r\n    var label = $(this).find('label');\r\n    var tempImgInput = $('<input>').attr({\r\n        'type': 'file',\r\n        'class': 'temp-input'\r\n    }).css({\r\n        'display': 'none',\r\n        'position': 'absolute'\r\n    }).change(function() {\r\n        if (this.files && this.files[0]) {\r\n            var reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                img.attr('src', e.target.result);\r\n            };\r\n            reader.readAsDataURL(this.files[0]);\r\n            label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };\r\n            var fileUploadReq = new XMLHttpRequest();\r\n            fileUploadReq.withCredentials = false;\r\n            fileUploadReq.open('POST', '/images');\r\n\r\n            fileUploadReq.onload = function() {\r\n                var json = JSON.parse(fileUploadReq.responseText);\r\n                console.log(json.location);\r\n                img.attr('src', json.location);\r\n                label.removeClass('pct').addClass('btn').text('change');\r\n                $('.temp-input').remove();\r\n            };\r\n            fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\r\n            var formData = new FormData();\r\n            formData.append('image', this.files[0], this.files[0].name);\r\n            fileUploadReq.send(formData);\r\n        }\r\n    });\r\n    $('body').append(tempImgInput);\r\n    tempImgInput.click();\r\n}\r\n\r\nfunction uploadHero() {\r\n    var hero = $('.post-hero');\r\n    var tempImgInput = $('<input>').attr({\r\n        'type': 'file',\r\n        'class': 'temp-input'\r\n    }).css({\r\n        'display': 'none',\r\n        'position': 'absolute'\r\n    }).change(function() {\r\n\r\n        if (this.files && this.files[0]) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = function(e) {\r\n                hero.css({ 'background': 'url(\"' + e.target.result + '\")', 'background-size': 'cover' });\r\n            };\r\n            reader.readAsDataURL(this.files[0]);\r\n            /*label.removeClass('btn').addClass('pct');\r\n            var updateProgress = function updateProgress(oEvent) {\r\n                var pct = Math.ceil(100 * oEvent.loaded / oEvent.total);\r\n                var height = 100 - pct;\r\n                loader.css({ 'height': height + 'px' });\r\n                label.text(pct + '%');\r\n            };*/\r\n            var fileUploadReq = new XMLHttpRequest();\r\n            fileUploadReq.withCredentials = false;\r\n            fileUploadReq.open('POST', '/upload/images');\r\n\r\n            fileUploadReq.onload = function() {\r\n                var json = JSON.parse(fileUploadReq.responseText);\r\n                hero.css({ 'background': 'url(\"' + json.location + '\")', 'background-size': 'cover' });\r\n                $('.input-hero-img').val(json.location);\r\n                console.log($('.input-hero-img').val())\r\n                //label.removeClass('pct').addClass('btn').text('change');\r\n                $('.temp-input').remove();\r\n            };\r\n            //fileUploadReq.upload.addEventListener(\"progress\", updateProgress, false);\r\n            var formData = new FormData();\r\n            formData.append('image', this.files[0], this.files[0].name);\r\n            fileUploadReq.send(formData);\r\n        }\r\n    });\r\n    $('body').append(tempImgInput);\r\n    tempImgInput.click();\r\n}\r\n\r\nfunction computProgress(oEvent) {\r\n    var percentComplete = Math.ceil(1000 * oEvent.loaded / oEvent.total) / 10 + '%';\r\n    return percentComplete;\r\n}\r\n\r\n/*function initUploadOf(type, docId) {\r\n    initMce('#input-body', docId);\r\n    if (type === 'people') {\r\n        console.log('uploading type of ' + type);\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var people = $('#upload-people');\r\n            var data = {\r\n                name: people.find('#input-name').val(),\r\n                picture: people.find('#profile-pic').find('img').attr('src'),\r\n                title: people.find('#input-title').val(),\r\n                degree: people.find('#input-degree').val(),\r\n                office: people.find('#input-office').val(),\r\n                email: people.find('#input-email').val(),\r\n                phone: people.find('#input-phone').val(),\r\n                details: tinymce.activeEditor.save()\r\n            };\r\n            if (docId) data.id = docId;\r\n            $.post('/add_people', data, function(res) {\r\n                if (docId) document.location.reload(true);\r\n                else window.location = res.url;\r\n            });\r\n        })\r\n    } else {\r\n        var attManager = initManeger();\r\n        var vue = new Vue({\r\n            el: '#app',\r\n            data: {\r\n                atts: []\r\n            },\r\n            methods: {\r\n                remove: function remove(att) {\r\n                    att.abort();\r\n                    this.atts.$remove(att);\r\n                }\r\n            }\r\n        });\r\n        $('#btn-img').click(function() {\r\n            var tempImgInput = $('<input>').attr({\r\n                'type': 'file',\r\n                'class': 'temp-input'\r\n            }).css({\r\n                'display': 'none',\r\n                'position': 'absolute'\r\n            }).change(function() {\r\n                if (this.files && this.files[0]) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function(e) {\r\n                        tinymce.activeEditor.execCommand('insertHTML', false, '<img class=\"inline-img\" src=\"' + e.target.result + '\" width=\"80%\" >');\r\n\r\n                        tinymce.activeEditor.uploadImages();\r\n                    };\r\n                    reader.readAsDataURL(this.files[0]);\r\n                }\r\n\r\n                $('.temp-input').remove();\r\n            });\r\n            $('body').append(tempImgInput);\r\n            tempImgInput.click();\r\n        });\r\n\r\n        $('#input-date').val(GetCurrentDate());\r\n        $('#btn-att').click(function() {\r\n            vue.atts.push(attManager.addAtt());\r\n        });\r\n        $('#btn-upload').click(function() {\r\n            $('#loader').modal('show');\r\n            var loader = $('#loader').find('.loader');\r\n            loader.text('uploading Images');\r\n            tinymce.activeEditor.uploadImages(function(success) {\r\n                loader.text('wrapping together');\r\n                var attHtml = attManager.wrapUp(vue.atts);\r\n                data = {\r\n                    title: $('#input-title').val(),\r\n                    date: $('#input-date').val(),\r\n                    source: $('#input-source').val(),\r\n                    cover: $(tinymce.activeEditor.save()).find('img').attr('src'),\r\n                    quote: getQuoteText(tinymce.activeEditor.save()),\r\n                    body: tinymce.activeEditor.save() + attHtml,\r\n                    att: attHtml\r\n                };\r\n                if (docId) data.id = docId;\r\n                loader.text('uploading');\r\n                var posturl = '/add_' + type;\r\n                $.post(posturl, data, function(res) {\r\n                    $('#loader').modal('hide');\r\n                    if (docId) document.location.reload(true);\r\n                    else window.location = res.url;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n}*/\r\nfunction uploadPost(){\r\n\r\n}\r\n\r\nfunction GetCurrentDate() {\r\n    var cdate = new Date();\r\n    var month = cdate.getMonth() < 9 ? '0' + (cdate.getMonth() + 1) : cdate.getMonth() + 1;\r\n    var currentDate = cdate.getFullYear() + \"-\" + month + \"-\" + cdate.getDate();\r\n    return currentDate;\r\n}\r\n\r\nfunction getQuoteText(htmlStr) {\r\n    var p = '';\r\n    $(htmlStr).find('*').each(function() {\r\n        if ($(this).text().length > 32) {\r\n            p = $(this).text();\r\n            return false;\r\n        }\r\n    });\r\n    return p;\r\n}"],"sourceRoot":"/source/"}